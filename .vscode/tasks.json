{
  "tasks": [
    {
      "type": "shell",
      "label": "execute_built",
      "windows": {
        "command": "${config:windows-output-file}"
      },
      "linux": {
        "command": "${config:linux-output-file}"
      },
      "args": [],
      "options": {
        "cwd": "${fileDirname}"
      },
      "problemMatcher": ["$gcc"],
      "dependsOn": ["clang_build"],
      "detail": "Execute bin for currently active source"
    },
    {
      "type": "shell",
      "label": "gcc_build",
      "linux": {
        "command": "bash",
        "args": [
          "-c",
          "g++ ${config:gcc-general-flags} ${config:linux-include} \"${file}\" ${config:linux-output}"
        ]
      },
      "windows": {
        "command": "cmd",
        "args": [
          "/c",
          "C:\\ProgramData\\mingw64\\mingw64\\bin\\g++.exe ${config:gcc-general-flags} ${config:windows-include} \\\"${file}\\\" ${config:windows-output}"
        ]
      },
      "options": {
        "cwd": "${fileDirname}"
      },
      "problemMatcher": ["$gcc"],
      "dependsOn": ["create_build_structure"],
      "detail": "Build currecnt file for linux"
    },
    {
      "type": "shell",
      "label": "clang_build",
      "linux": {
        "command": "bash",
        "args": [
          "-c",
          "clang++ ${config:clang-general-flags} ${config:linux-include} \"${file}\" ${config:linux-output}"
        ]
      },
      "windows": {
        "command": "cmd",
        "args": [
          "/c",
          "\\\"C:\\Program Files\\LLVM\\bin\\clang++.exe\\\" ${config:clang-general-flags-window} ${config:windows-include} \\\"${file}\\\" ${config:windows-output}"
        ]
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "options": {
        "cwd": "${fileDirname}"
      },
      "problemMatcher": ["$gcc"],
      "dependsOn": ["create_build_structure"],
      "detail": "Build currecnt file for linux"
    },
    {
      "type": "shell",
      "label": "create_build_structure",
      "linux": {
        "command": "mkdir",
        "args": ["-p", "build/${relativeFileDirname}"]
      },
      "windows": {
        "command": "cmd",
        "args": [
          "/c",
          "\"if not exist \\\"build\\${relativeFileDirname}\\\" mkdir \\\"build\\${relativeFileDirname}\\\"\""
        ]
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": ["$gcc"],
      "detail": "Create build directory"
    },
    {
      "type": "shell",
      "label": "clang-build-graphics",
      "linux": {},
      "windows": {
        "command": "cmd",
        "args": ["/c", "make deploy"]
      },
      "options": {
        "cwd": "${workspaceFolder}",
        "env": {
          "CXX": "${config:win-clang-cxx}",
          "CXX_FLAGS": "${config:clang-general-flags}",
          "QT_PATH": "${config:w-qt}",
          "INCLUDES": "${config:win-gui-inc-flag}",
          "GUI_BUILD_DIR": "${config:win-gui-build-dir}",
          "GUI_SRC_DIR": "${config:win-gui-src-dir}",
          "GUI_HDR_DIR": "${config:win-gui-hdr-dir}",
          "EXE_PATH": "${config:win-gui-final}",
          "QT_LIBS": "${config:win-gui-libs}",
          "QT_FLAGS": "${config:win-gui-defs}",
          "TARGET_SRC": "${file}"
        }
      },
      "problemMatcher": ["$gcc"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      },
      "detail": "Deploy qt dependencies to ${workspaceFolder}\\lib"
    },

    {
      "type": "shell",
      "label": "gcc-build-graphics",
      "linux": {},
      "windows": {
        "command": "cmd",
        "args": ["/c", "make deploy"]
      },
      "options": {
        "cwd": "${workspaceFolder}",
        "env": {
          "CXX": "${config:win-gcc-cxx}",
          "CXX_FLAGS": "${config:gcc-general-flags}",
          "QT_PATH": "${config:w-qt}",
          "INCLUDES": "${config:win-gui-inc-flag}",
          "GUI_BUILD_DIR": "${config:win-gui-build-dir}",
          "GUI_SRC_DIR": "${config:win-gui-src-dir}",
          "GUI_HDR_DIR": "${config:win-gui-hdr-dir}",
          "EXE_PATH": "${config:win-gui-final}",
          "QT_LIBS": "${config:win-gui-libs}",
          "QT_FLAGS": "${config:win-gui-defs}",
          "TARGET_SRC": "${file}"
        }
      },
      "problemMatcher": ["$gcc"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      },
      "detail": "Deploy qt dependencies to ${workspaceFolder}\\lib"
    },
    {
      "type": "shell",
      "label": "clean-graphics",
      "linux": {},
      "windows": {
        "command": "cmd",
        "args": ["/c", "make clean"]
      },
      "options": {
        "cwd": "${workspaceFolder}",
        "env": {
          "GUI_BUILD_DIR": "${config:win-gui-build-dir}",
          "EXE_PATH": "${config:win-gui-final}"
        }
      },
      "problemMatcher": ["$gcc"],
      "detail": "Clean Graphics build"
    },
    {
      "type": "shell",
      "label": "apply_formating",
      "linux": {
        "command": "bash",
        "args": [
          "-c",
          "find . -iname '*.h' -o -iname '*.cpp' -print0 | xargs -0 -I cppfile clang-format -i -style=file cppfile"
        ]
      },
      "windows": {
        "command": "cmd",
        "args": [
          "/c",
          "find . -name \"*.cpp\" -exec clang-format -i -style=file {} \\; && find . -name \"*.h\" -exec clang-format -i -style=file {} \\;"
        ]
      },
      "problemMatcher": []
    }
  ],
  "version": "2.0.0"
}
